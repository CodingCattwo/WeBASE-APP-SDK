group 'com.webank'
version = '1.5.1'

apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'

sourceCompatibility = 1.8
targetCompatibility = 1.8

[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

repositories {
    maven {url "http://maven.aliyun.com/nexus/content/groups/public/" }
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.bouncycastle:bcprov-jdk15on:1.67'
    implementation 'org.apache.commons:commons-lang3:3.8.1'
    implementation 'com.squareup.okhttp3:okhttp:4.8.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.0'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.11.0'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.0'
    implementation 'com.fasterxml.jackson.module:jackson-module-parameter-names:2.11.0'
    implementation 'org.projectlombok:lombok:1.18.12'
    implementation 'org.apache.logging.log4j:log4j-api:2.13.3'
    implementation 'org.apache.logging.log4j:log4j-core:2.13.3'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.13.3'
}

clean {
    delete 'dist'
}

sourceSets {
    main {
        java {
            srcDir "src/main/java"
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
}

javadoc {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

jar.dependsOn(sourcesJar)

jar {
    destinationDir file("dist/v${project.version}")
    archiveName project.name + "-" + "${project.version}" + ".jar"

    manifest {
        attributes(
            'Implementation-Title': project.name,
            'Implementation-Version': project.version)
    }
    exclude '**/*.xml'
    
}

//publishing {
//    publications {
//        mavenJava(MavenPublication) {
//            from components.java
//            artifact sourcesJar
//            artifact javadocJar
//        }
//    }
//    repositories {
//        maven {
//            if (project.version.endsWith('-SNAPSHOT')) {
//                url = 'https://oss.sonatype.org/content/repositories/snapshots/'
//            } else {
//                url 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
//            }
//            credentials {
//                username = ossrhUsername
//                password = ossrhPassword
//            }
//        }
//    }
//}
//
//signing {
//    sign configurations.archives
//}
